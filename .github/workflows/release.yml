name: Release

on:
  release:
    types: [published]

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: gradle-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Check spotless
        run: ./gradlew spotlessCheck --stacktrace

      - name: Check lint
        run: ./gradlew lintRelease --stacktrace

      - name: Run local tests
        run: ./gradlew testRelease --stacktrace

      - name: Upload build outputs (APKs)
        uses: actions/upload-artifact@v3
        with:
          name: build-outputs
          path: app/build/outputs

      - name: Upload build reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build-reports
          path: app/build/reports

  androidtest:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: gradle-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Set Timezone
        uses: szenius/set-timezone@v1.0
        with:
          timezoneMacos: "Europe/Paris"

      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 31
          heap-size: 512M
          ram-size: 4096M
          arch: x86_64
          profile: pixel_4
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew executeScreenshotTests

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: app/build/reports

  release:
    runs-on: ubuntu-latest
    needs: [check, androidtest]
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Gradle cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches/modules-*
          ~/.gradle/caches/jars-*
          ~/.gradle/caches/build-cache-*
        key: gradle-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

    - name: Build release
      run: ./gradlew assembleRelease --stacktrace

    - name: Sign release APK
      id: sign_app
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}

    - name: Upload APK to release
      uses: skx/github-action-publish-binaries@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        args: ${{steps.sign_app.outputs.signedReleaseFile}}

    - name: Build release
      run: ./gradlew bundleRelease --stacktrace

    - name: Sign release AAB
      id: sign_app_aab
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: app/build/outputs/bundle/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}

    - name: Upload Released Artifact
      uses: actions/upload-artifact@v3
      with:
        name: Signed apk & aab
        path: |
          ${{steps.sign_app.outputs.signedReleaseFile}}
          ${{steps.sign_app_aab.outputs.signedReleaseFile}}

    - name: Create service_account.json
      id: createServiceAccount
      run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json

    - name: Deploy to Play Store
      id: deploy
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJson: service_account.json
        packageName: com.jventrib.formulainfo
        releaseFiles: ${{steps.sign_app_aab.outputs.signedReleaseFile}}
        track: internal
        whatsNewDirectory: publish/whatsnew
        status: completed
        mappingFile: 'app/build/outputs/mapping/release/mapping.txt'