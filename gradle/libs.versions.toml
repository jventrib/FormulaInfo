[versions]
accompanistSwiperefresh = "0.36.0"
activityCompose = "1.9.3"
archLifecycleVersion = "2.9.0-alpha05"
coilCompose = "2.7.0"
coreKtx = "1.6.1"
coreTestingVersion = "2.2.0"
datastorePreferences = "1.1.1"
desugar_jdk_libs = "2.1.2"
espressoCore = "3.6.1"
faceDetection = "16.1.7"
gradle = "8.7.1"
hiltAndroidGradlePlugin = "2.52"
hiltNavigationCompose = "1.2.0"
junit = "4.13.2"
junitKtx = "1.2.1"
kotlin = "2.0.0"
kotlinGradlePlugin = "2.0.21"
lifecycleRuntimeKtx = "2.8.6"
logcat = "0.1"
loggingInterceptor = "5.0.0-alpha.12"
materialVersion = "1.12.0"
mockk = "1.13.13"
navigationCompose = "2.9.0-alpha01"
retrofitVersion = "2.11.0"
robolectric = "4.13"
roomVersion = "2.6.1"
shot = "6.1.0"
truthVersion = "1.4.4"

[libraries]
accompanist-swiperefresh = { module = "com.google.accompanist:accompanist-swiperefresh", version.ref = "accompanistSwiperefresh" }
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
coil = { module = "io.coil-kt:coil", version.ref = "coilCompose" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coilCompose" }
coil-svg = { module = "io.coil-kt:coil-svg", version.ref = "coilCompose" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofitVersion" }
core-ktx = { module = "androidx.test:core-ktx", version.ref = "coreKtx" }
core-testing = { module = "androidx.arch.core:core-testing", version.ref = "coreTestingVersion" }
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }
desugar_jdk_libs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar_jdk_libs" }
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCore" }
face-detection = { module = "com.google.mlkit:face-detection", version.ref = "faceDetection" }
gradle = { module = "com.android.tools.build:gradle", version.ref = "gradle" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hiltAndroidGradlePlugin" }
hilt-android-gradle-plugin = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hiltAndroidGradlePlugin" }
hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hiltAndroidGradlePlugin" }
hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigationCompose" }
junit = { module = "junit:junit", version.ref = "junit" }
junit-ktx = { module = "androidx.test.ext:junit-ktx", version.ref = "junitKtx" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlinGradlePlugin" }
lifecycle-common-java8 = { module = "androidx.lifecycle:lifecycle-common-java8", version.ref = "archLifecycleVersion" }
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "archLifecycleVersion" }
logcat = { module = "com.squareup.logcat:logcat", version.ref = "logcat" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "loggingInterceptor" }
material = { module = "com.google.android.material:material", version.ref = "materialVersion" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "loggingInterceptor" }
navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofitVersion" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "roomVersion" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomVersion" }
room-testing = { module = "androidx.room:room-testing", version.ref = "roomVersion" }
shot = { module = "com.karumi:shot", version.ref = "shot" }
truth = { module = "com.google.truth:truth", version.ref = "truthVersion" }

[plugins]
org-jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }

compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }